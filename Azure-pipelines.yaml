trigger:
  branches:
    include:
      - main

jobs:
- job: BuildAndPublish
  displayName: 'Build and Publish'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - checkout: self

  - task: MavenAuthenticate@0
    inputs:
      mavenCredentials: 'MavenCredentials'

  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean package'
      options: '-DskipTests'

  - task: Docker@2
    displayName: 'Build Docker image'
    inputs:
      command: 'build'
      containerRegistry: 'Docker-Hub-Connection'
      repository: 'shivakrishna99/az-petclinic'
      dockerfile: '**/Dockerfile'
      buildContext: '$(Build.SourcesDirectory)'
      tags: |
        latest
        $(Build.BuildId)

  - task: Docker@2
    displayName: 'Push Docker image'
    inputs:
      command: 'push'
      containerRegistry: 'Docker-Hub-Connection'
      repository: 'shivakrishna99/az-petclinic'
      tags: |
        latest
        $(Build.BuildId)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/target'
      ArtifactName: 'Petclinic'

  - script: |
      curl -LO https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
      unzip terraform_1.0.0_linux_amd64.zip
      sudo mv terraform /usr/local/bin/
      terraform version
    displayName: 'Install Terraform'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true

  - script: |
      pip install awscli --upgrade --user
      export PATH=~/.local/bin:$PATH
    displayName: 'Install AWS CLI'

  - checkout: self
    path: code-repo

  - git: 
      repo: 'https://github.com/GitPracticeRepositorys/learn-terraform-provision-eks-cluster.git'
      displayName: 'Checkout Terraform Files'
      clean: true

  - task: TerraformTaskV1@0
    displayName: 'Terraform Init'
    inputs:
      provider: 'aws'
      command: 'init'
      workingDirectory: 'learn-terraform-provision-eks-cluster'
      terraformServiceConnection: 'terraform'

  - task: TerraformTaskV1@0
    displayName: 'Terraform Plan'
    inputs:
      provider: 'aws'
      command: 'plan'
      workingDirectory: 'learn-terraform-provision-eks-cluster'
      terraformServiceConnection: 'terraform'

  - task: TerraformTaskV1@0
    displayName: 'Terraform Apply'
    inputs:
      provider: 'aws'
      command: 'apply'
      workingDirectory: 'learn-terraform-provision-eks-cluster'
      terraformServiceConnection: 'terraform'

  - task: AWSCLI@1
    displayName: 'Configure AWS CLI'
    inputs:
      awsCredentials: 'AWS-EKS-Connection'
